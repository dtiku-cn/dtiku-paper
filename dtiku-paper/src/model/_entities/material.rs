//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use crate::model::material::MaterialExtra;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "material")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Text")]
    pub content: String,
    #[sea_orm(column_type = "Bit(Some(128))")]
    pub content_sim_hash: Vec<u8>,
    #[sea_orm(column_type = "JsonBinary")]
    pub extra: Vec<MaterialExtra>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
