//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
    strum :: EnumString,
    strum :: Display,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "src_type")]
#[serde(rename_all = "snake_case")]
pub enum SrcType {
    #[sea_orm(string_value = "question")]
    #[strum(serialize = "q")]
    Question,
    #[sea_orm(string_value = "material")]
    #[strum(serialize = "m")]
    Material,
    #[sea_orm(string_value = "solution")]
    #[strum(serialize = "s")]
    Solution,
}

#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
    strum :: EnumString,
    strum :: Display,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "from_type")]
#[serde(rename_all = "snake_case")]
pub enum FromType {
    #[sea_orm(string_value = "fenbi")]
    Fenbi,
    #[sea_orm(string_value = "huatu")]
    Huatu,
    #[sea_orm(string_value = "offcn")]
    Offcn,
    #[sea_orm(string_value = "chinagwy")]
    Chinagwy,
}
