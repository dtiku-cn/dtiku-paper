//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "scraper_solution")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub question_id: i32,
    #[sea_orm(column_type = "Text")]
    pub content: String,
    #[sea_orm(column_type = "Bit(Some(128))")]
    pub content_sim_hash: Vec<u8>,
    #[sea_orm(column_type = "Text")]
    pub src_url: String,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub src_hash: Vec<u8>,
    pub created: DateTime,
    pub modified: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}
