{%- import "macros/general.html.jinja" as general -%}
{%- import "macros/paper.html.jinja" as paper -%}
{%- import "macros/question.html.jinja" as question -%}
{%- import "macros/artalk.html.jinja" as artalk -%}
{%- import "macros/painter.html.jinja" as painter -%}
<!doctype html>
<html lang="zh">

<head>
    {% call general::meta() %}
    <title>{{paper.title}}{%if mode == "show_answer"%}Á≠îÊ°à{%endif%} | {{global.config.site_title}}</title>
    {% call general::headerfiles() %}
    {% if mode == "exercise" %}
    <style>
        #xc-report tr:last-child {
            border-top: 1px dashed grey;
            font-weight: bold;
        }

        .answer-paper-wrapper {
            background: rgba(255, 255, 255, 0.3);
            -webkit-backdrop-filter: blur(10px);
            backdrop-filter: blur(10px);
            overflow-y: scroll;
            max-height: 90vh;
            border-radius: .5em .5em 0 0;
            box-shadow: 0 0 6px 0 rgba(0, 0, 0, .6);
            transition: bottom .3s;
        }

        .-answer- label {
            color: #CE1126 !important;
        }

        .-answer- .custom-control-input~.custom-control-label::before {
            background-color: #CE1126 !important;
        }

        .paper .custom-control-input:disabled:checked~.custom-control-label::before {
            background-color: #FFC107 !important;
        }

        .paper .-answer- .custom-control-input:checked~.custom-control-label::before {
            background-color: #59CE77 !important;
        }

        .paper .custom-radio {
            z-index: auto;
        }

        .paper .custom-control-label::before,
        .paper .custom-control-label::after {
            z-index: 1;
        }

        #answer-paper a.answer-block {
            display: block;
            text-align: center;
            font-size: 10px;
            width: 3em;
            height: 3em;
            line-height: 3em;
            margin: 1em;
            border: 1px solid #59CE77;
        }

        #answer-paper-toggle .icon-svg-arrow {
            transition: transform .3s;
            transform: rotate(-90deg);
        }

        #answer-paper-toggle[aria-expanded="true"] .icon-svg-arrow {
            transform: rotate(90deg);
        }
    </style>
    {%else%}
    <style>
        #answer-list>a {
            width: 20%;
        }
    </style>
    {%endif%}
    <script src="/static/vendor/utif/3.1.0/UTIF.js"></script>
</head>

<body class="container" onload="UTIF.replaceIMG()">
    {% call general::header() %}
    <div id="printcontent" class="{% if global.user.is_none() %}d-print-none{% endif %}">
        <h1 class="text-center">{{paper.title}}</h1>
        <p class="text-center d-print-none">{% call paper::paper_meta(paper) %}</p>
        {% if mode == "show_answer" %}
        <div id="answer-list" class="show-answer row">
            {%for q in questions %}
            {%if let Some(answer) = q.get_answer() %}
            <a th:if="${q.answer!=null}" class="text-reset text-center" href="#q-{{q.num}}">
                <b>{{q.num}}</b>„ÄÅ<b class="-answer-">{{answer}}</b>
            </a>
            {%endif%}
            {%endfor%}
        </div>
        {% elif mode == "exercise" %}
        <table id="xc-report" class="mx-auto text-center d-print-none" style="width: 20em" th:if="${report!=null}">
            <caption>ÊµãÈ™åÊä•Âëä</caption>
            <tr>
                <th>È¢òÂûã</th>
                <th>Ê≠£Á°Æ</th>
                <th>ÈîôËØØ</th>
                <th>È¢òÈáè</th>
                <th>ËÄóÊó∂</th>
                <th>Ê≠£Á°ÆÁéá</th>
            </tr>
            <tr th:each="c : ${report}">
                <td th:text="${c.chapter.title()}"></td>
                <td class="text-success" th:text="${c.correct}"></td>
                <td class="text-warning" th:text="${c.error}"></td>
                <td class="text-info" th:text="${c.chapter.questionCount}"></td>
                <td class="text-info" th:text="${@thymeleafUtils.formatSecond(c.time)}"></td>
                <td class="text-info" th:text="${numbers.formatPercent(c.correctRatio,1,2)}"></td>
            </tr>
        </table>
        {% endif %}
        <div class="paper paper-xingce" class="{{mode}}">
            {% if mode == "show_answer" %}
            {% for qvo in questions %}
            {% if let Some(chapter) = qvo.chapter %}
            <div class="mt-3">
                <h2 class="text-center">{{chapter.name}}</h2>
                <p><b>{{chapter.desc}}</b></p>
            </div>
            {% endif %}
            {% if let Some(materials) = qvo.materials %}
            {% for m in materials %}
            <h3 class="text-center mt-2">{{m.chinese_num()}}</h3>
            <div class="material">{{m.content | safe}}</div>
            {% endfor %}
            {% endif %}
            <div class="d-flex mt-2">
                <div id="q-{{qvo.num}}" class="q-number flex-shrink-0"><b>{{qvo.num}}</b>.</div>
                <div class="flex-grow-1 question-wrapper">{% call question::xingce_question(qvo) %}</div>
            </div>
            {% endfor %}
            {% elif mode == "exercise" %}
            <form method="post" action="/paper/{{paper.id}}/report">
                {% for qvo in questions %}
                {% if let Some(chapter) = qvo.chapter %}
                <div class="mt-3">
                    <h2 class="text-center">{{chapter.name}}</h2>
                    <p><b>{{chapter.desc}}</b></p>
                </div>
                {% endif %}
                {% if let Some(materials) = qvo.materials %}
                {% for m in materials %}
                <h3 class="text-center mt-2">{{m.chinese_num()}}</h3>
                <div class="material">{{m.content | safe}}</div>
                {% endfor %}
                {% endif %}
                <div class="d-flex mt-2">
                    <div id="q-{{qvo.num}}" class="q-number flex-shrink-0"><b>{{qvo.num}}</b>.</div>
                    <div th:include="fragments/question::xingce_exercise_question(${qvo},${answer})"
                        class="flex-grow-1 question-wrapper show-answer"></div>
                </div>
                {% endfor %}
                <div class="fixed-bottom answer-paper-wrapper d-print-none">
                    <div class="d-flex justify-content-center my-1">
                        <a id="answer-paper-toggle" href="#answer-paper" data-toggle="collapse" class="btn btn-link">
                            <svg class="icon-svg icon-svg-sm icon-svg-arrow mr-2">
                                <use xlink:href="#ic-arrow"></use>
                            </svg>
                            <b>Á≠îÈ¢òÂç°</b>
                        </a>
                        <button th:if="${answer==null}" class="btn btn-link" type="submit"><b>‰∫§Âç∑</b></button>
                    </div>
                    <div id="answer-paper" class="collapse">
                        <div class="d-flex flex-wrap justify-content-center">
                            {% for qvo in questions %}
                            <a class="answer-block" id="answer-for-{{qvo.id}}" href="#q-{{qvo.num}}"
                                classappend="${answer==null?'text-muted':(@thymeleafUtils.matchAnswer(answer,qvo.id,qvo.answer.answer)?'text-white bg-success':'text-white bg-danger')}">{{qvo.num}}</a>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </form>
            {% endif %}
        </div>
    </div>
    {% call artalk::comment(false,true,true,"Êù•ËøôÈáåÂêêÊßΩ‰∏Ä‰∏ãËØïÂç∑üòÅ")%}
    {% call general::footer() %}
    {% call painter::painter() %}
    {% call question::solution_comment_script() %}
    {% call question::answer_collapse_action() %}
    <script src='/static/dist/js/speech.js'></script>
    <script th:if="${strings.equals('exercise',paper.mode.name()) && #maps.isEmpty(answer)}">
        window.floatButtonAddon = [{
            style: 'always',
            render: function () {
                return "<div id='click_timer' class='d-flex align-items-center'>" +
                    "<b class='total-timer d-lg-block d-none' style='min-width:4em'>00:00</b>" +
                    "<svg class='icon-svg'><use xlink:href='#ic-timer'></use></svg>" +
                    "</div>";
            },
            click: function () {
            }
        }]
        $(function () {
            var $clickTimer = $("#click_timer");

            function s2String(s) {
                m = Math.floor(s / 60);
                return String(m).padStart(2, '0') + ":" + String(s % 60).padStart(2, '0');
            }

            function refreshTimer() {
                var $timer = $clickTimer;
                var totalTime = $timer.data("total-timer") || 0, itemTime = $timer.data("item-timer") || 0;
                $timer.data("total-timer", totalTime + 1).data('item-timer', itemTime + 1);
                $timer.find("b.total-timer").text(s2String(totalTime));
            }

            $('input[type="radio"]').change(function () {
                if (this.value) {
                    var $answer = $('#answer-for-' + this.name);
                    var $qt = $answer
                        .removeClass('text-muted')
                        .toggleClass('bg-success', !!this.value)
                        .toggleClass('text-white', !!this.value)
                        .find('input[type="hidden"]');
                    if ($qt.size()) {
                        $qt.val(Number($qt.val()) + $clickTimer.data('item-timer'));
                    } else {
                        $answer.append('<input name="qt.' + this.name + '" type="hidden" value="' + $clickTimer.data('item-timer') + '"/>');
                    }
                    $clickTimer.data('item-timer', 0);
                }
            });

            var t = setInterval(refreshTimer, 1000);
            $clickTimer.click(function () {
                t = t ? clearInterval(t) : setInterval(refreshTimer, 1000);
                $(this).find(".icon-svg>use").attr('xlink:href', t ? '#ic-timer' : '#ic-rest');
                $(this).find("b.total-timer").toggleClass('d-none', !!t).toggleClass('d-block', !t);
            });
        });
    </script>
</body>

</html>